PART
{

// Kerbal Space Program - Part Config
// FS2F Helicopter Fenestron
// 

// --- general parameters ---
name = FScopterRotorFenestron
module = Part
author = Snjo

// --- asset parameters ---
mesh = model.mu
scale = 1.0
rescaleFactor = 1.0

// --- node definitions ---
// definition format is Position X, Position Y, Position Z, Up X, Up Y, Up Z
node_attach = 0, 0.647, 0.0, 0.0, 1.0, 0.0
node_stack_top = 0.0, 0.647, 0.0, 0.0, 1.0, 0.0

// --- FX definitions ---

//fx_exhaustLight_blue = 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, power
//fx_smokeTrail_light  = 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, power
fx_exhaustSparks_flameout = 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, flameout

// --- editor parameters ---
TechRequired = advAerodynamics
cost = 450
entryCost = 1200
category = Control
subcategory = 0
title = FS2F helicopter Fenestron
manufacturer = Bitesized Industries
description = This helicopter tail rotor will make sure you can rotate your craft. Uses Electricity when steering. To keep steering logical, keep the little arrow pointed down! (Can be inverted by right clicking)

// attachment rules: stack, srfAttach, allowStack, allowSrfAttach, allowCollision
attachRules = 1,1,0,1,1

// --- standard part parameters ---
mass = 0.1
dragModelType = default
maximum_drag = 0.01
minimum_drag = 0.01
angularDrag = 2
crashTolerance = 15
maxTemp = 3600
fuelCrossFeed = True

MODULE
{
	name = FSengineBladed
	rotorHubName = propeller
	bladeHubName = bladeRoot
	baseTransformName = baseReference
	tailRotor = true
	wingArea = 0.1
	maxRPM = 1000
	span = 1
	maxThrust = 5 // doesn't mean anything in a bladed engine, except as a coefficient for fuel consumption
	resources = ElectricCharge,1
	fuelConsumption = 0,0.0001;1,0.001
	steeringResponse = 15
	debugMode = false
}

MODULE
{
	name = FSplanePropellerSpinner
	propellerName = propeller
	duplicatedBlades = false
	debugMode = false
}

MODULE
{
	name = FSmeshSwitch
	objectDisplayNames = One fin; Two fins; No fins
	objects = finTop; finTop, finBottom; noFin
}

MODULE
{
	name = FSmimickRotation
	sourceObjectName = bladePoint
	targetObjectName = bladeRotator
}

// MODULE
// {
	// name = FSliftSurface
	// liftTransformName = centerLift
	// wingArea = 1
	// span = 1 // 1 really, cheating since it will usually be part of a longer span
	// power = 0.0008 //0.00024
	// dragMultiplier = 1
	// zeroLiftDrag = 0.0378	
	// moduleID = 0
// }

// PART END
}